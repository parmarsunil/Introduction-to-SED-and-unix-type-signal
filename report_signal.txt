WHAT IS SIGANAL?
Signals are a limited form of inter-process communication used in Unix, Unix-like, and other POSIX-compliant operating systems. A signal is an asynchronous notification sent to a process or to a specific thread within the same process in order to notify it of an event that occurred. 
PROTOYPE:
         void ( *signal(int sig, void (*handler)(int)) ) (int);
         
     The whole thing declares a function called signal:
    1.signal takes an int and a function pointer
        this function pointer takes an int and returns void
    2.signal returns a function pointer
        this function pointer takes an int and returns a void
    That's where the last int comes in.

First the signals described in the original Posix standard.

       Signal     Value     Action   Comment
       ──────────────────────────────────────────────────────────────────────
       SIGHUP        1       Term    Hangup detected on controlling terminal
                                     or death of controlling process
       SIGINT        2       Term    Interrupt from keyboard
       SIGQUIT       3       Core    Quit from keyboard
       SIGILL        4       Core    Illegal Instruction
       SIGABRT       6       Core    Abort signal from abort(3)
       SIGFPE        8       Core    Floating point exception
       SIGKILL       9       Term    Kill signal
       SIGSEGV      11       Core    Invalid memory reference
       SIGPIPE      13       Term    Broken pipe: write to pipe with no
                                     readers
       SIGALRM      14       Term    Timer signal from alarm(2)
       SIGTERM      15       Term    Termination signal
       SIGUSR1   30,10,16    Term    User-defined signal 1
       SIGUSR2   31,12,17    Term    User-defined signal 2
       SIGCHLD   20,17,18    Ign     Child stopped or terminated
       SIGCONT   19,18,25    Cont    Continue if stopped
       SIGSTOP   17,19,23    Stop    Stop process
       SIGTSTP   18,20,24    Stop    Stop typed at terminal
       SIGTTIN   21,21,26    Stop    Terminal input for background process
       SIGTTOU   22,22,27    Stop    Terminal output for background process

       The signals SIGKILL and SIGSTOP cannot be caught, blocked, or
       ignored.
       SIG_DFL              stop      SIG_DFL specifies the default action for the particular signal.
       SIG_IGN              Ignore    SIG_IGN specifies that the signal should be ignored.
       
REFERENCES:
    #http://stackoverflow.com/questions/15739500/how-to-read-this-prototype
    #http://man7.org/linux/man-pages/man7/signal.7.html 
